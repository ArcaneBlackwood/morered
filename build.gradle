
buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven {url='https://dist.creeper.host/Sponge/maven'}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
	// this version works on gradle 4.9
	// more recent versions of shadow work on more recent versions of gradle
	id 'com.github.johnrengelman.shadow' version '4.0.4'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java' // java plugin is needed for the shadow plugin to work
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}"
group = "commoble.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}-${mc_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: "${mappings_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
            arg "-mixin.config="+"morered"+".mixins.json"

            mods {
                "morered" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
            arg "-mixin.config="+"morered"+".mixins.json"

            mods {
                "morered" {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'
            arg "-mixin.config="+"morered"+".mixins.json"

            args '--mod', 'morered', '--all', '--output', file('src/generated/resources/')

            mods {
                "morered" {
                    source sourceSets.main
                }
            }
        }
    }
}

configurations {
	shade
}

repositories {
	// jei maven and backup maven
	maven {url = "https://dvs1.progwml6.com/files/maven/"}
	maven {url = "https://modmaven.k-4u.nl"}
	// repos for mixin
	jcenter()
	mavenCentral()
	// repo for databuddy
	maven { url "https://cubicinterpolation.net/maven/" }
	// local repo for cram until we get a proper maven up
	maven { url "file://C:/Users/Joseph/Saved Games/minecraft mods/cram/maven" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    
    // jei
	compileOnly fg.deobf("mezz.jei:${jei_branch}:${jei_version}:api")
	runtimeOnly fg.deobf("mezz.jei:${jei_branch}:${jei_version}")

	// junit dependencies
	testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
	
	// databuddy shadowjar
	compile fg.deobf("commoble.databuddy:${databuddy_branch}:${databuddy_version}")
	shade fg.deobf("commoble.databuddy:${databuddy_branch}:${databuddy_version}")
	
	// cram dependencies
	//compileOnly fg.deobf("commoble.cram:${cram_branch}:${cram_version}:debug")
	//runtimeOnly fg.deobf("commoble.cram:${cram_branch}:${cram_version}")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "${modid}",
            "Specification-Vendor": "Commoble",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Commoble",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

shadowJar {
	classifier = ''
	configurations = [project.configurations.shade]
	relocate 'commoble.databuddy', "${project.group}.shadow.commoble.databuddy"
}

reobf {
    shadowJar { }
}
// this replaces jar.finalizedBy('reobfJar') in the standard forge mod buildscript
tasks.build.dependsOn reobfShadowJar
jar.finalizedBy('reobfShadowJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "${modid}.refmap.json"
}
